import { cn } from "@/lib/utils";

// A component to render a variety of SVG logos.
// As we can't use actual image files, we can define SVG data here
// and render it. This is a good way to have more control over the
// look and feel of the logos.

const LOGO_MAP: Record<string, JSX.Element> = {
    'ChatGPT': <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>ChatGPT</title><path d="M22.2819 10.122C22.2819 9.34442 21.6596 8.72217 20.8819 8.72217C20.1044 8.72217 19.4821 9.34442 19.4819 10.122C19.4819 10.8995 20.1044 11.5218 20.8819 11.5218C21.6596 11.5218 22.2819 10.8995 22.2819 10.122ZM12.0019 2.08447C11.2244 2.08447 10.6021 2.70672 10.6021 3.48447C10.6021 4.26222 11.2244 4.88447 12.0019 4.88447C12.7794 4.88447 13.4019 4.26222 13.4019 3.48447C13.4019 2.70672 12.7794 2.08447 12.0019 2.08447ZM3.72217 10.122C3.72217 9.34442 3.09992 8.72217 2.32217 8.72217C1.54442 8.72217 0.922168 9.34442 0.922168 10.122C0.922168 10.8995 1.54442 11.5218 2.32217 11.5218C3.09992 11.5218 3.72217 10.8995 3.72217 10.122ZM22.2819 13.8821C21.6596 13.8821 21.0372 14.3421 20.8222 14.9314C20.4372 16.0114 19.4397 16.7914 18.2397 16.7914C16.8597 16.7914 15.7397 15.8289 15.5347 14.4789C15.4497 13.8489 14.9397 13.3689 14.3097 13.2946C13.6797 13.2096 13.0497 13.5696 12.8247 14.1696C12.5147 14.9496 11.8047 15.5496 10.9647 15.6546C10.1372 15.7596 9.32969 15.3446 8.87969 14.6496C8.52719 14.0946 7.89719 13.7846 7.24219 13.9046C6.58719 14.0371 6.09719 14.6046 6.02219 15.2721C5.83469 16.9046 6.88469 18.4146 8.41469 19.0146C8.98469 19.2396 9.62969 19.0521 9.99219 18.5721C10.2747 18.1971 10.7472 17.9846 11.2347 18.0021C11.8347 18.0121 12.3897 18.3446 12.7047 18.8496C13.2597 19.7496 14.3097 20.2946 15.4197 20.1296C16.4847 19.9796 17.3747 19.2696 17.7747 18.2946C18.0672 17.5896 18.7847 17.1446 19.5447 17.2646C20.3047 17.3846 20.9147 17.9521 20.9997 18.7221C21.1497 20.2146 19.9247 21.5546 18.4347 21.8496C17.8472 21.9446 17.3747 22.4246 17.3097 23.0121C17.2447 23.5996 17.6547 24.1221 18.2397 24.2396C20.8847 24.7496 23.0847 22.8246 23.1747 20.1746C23.2122 18.9146 22.6847 17.7246 21.7547 16.9296C21.1047 16.3646 20.8647 15.5396 21.1247 14.7746C21.3222 14.1996 21.8547 13.8821 22.2819 13.8821ZM12.0019 21.9148C12.7794 21.9148 13.4019 21.2925 13.4019 20.5148C13.4019 19.7373 12.7794 19.115 12.0019 19.115C11.2244 19.115 10.6021 19.7373 10.6021 20.5148C10.6021 21.2925 11.2244 21.9148 12.0019 21.9148ZM3.72217 13.8821C4.49992 13.8821 5.12217 13.2598 5.12217 12.4823C5.12217 11.7048 4.49992 11.0825 3.72217 11.0825C2.94442 11.0825 2.32217 11.7048 2.32217 12.4823C2.32217 13.2598 2.94442 13.8821 3.72217 13.8821ZM8.40217 4.96455C8.90967 4.39455 8.78967 3.51955 8.21967 3.01455C7.64967 2.50955 6.77467 2.38955 6.26967 2.89455C4.94967 4.04955 4.07967 5.59455 3.84217 7.29455C3.76717 7.84455 4.14217 8.39955 4.69217 8.54955C5.25467 8.70955 5.85217 8.42955 6.12217 7.91955C6.52217 6.79455 7.24217 5.82205 8.16217 5.10205C8.24967 5.03955 8.32717 4.99455 8.40217 4.96455ZM15.8397 5.11477C16.7597 5.83477 17.4797 6.80727 17.8797 7.93227C18.1497 8.44227 18.7497 8.72227 19.3097 8.56227C19.8597 8.41227 20.2347 7.85727 20.1597 7.30727C19.9222 5.60727 19.0522 4.06227 17.7322 2.90727C17.2272 2.40227 16.3522 2.28227 15.7822 2.78727C15.2122 3.29227 15.0922 4.16727 15.5972 4.67227C15.6722 4.74727 15.7522 4.81477 15.8397 4.88227L15.8397 5.11477Z" fill="currentColor"/></svg>,
    'Gemini': <svg viewBox="0 0 100 100"><defs><linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="100%"><stop offset="0%" style={{stopColor: '#8E77FF', stopOpacity: 1}} /><stop offset="100%" style={{stopColor: '#34A853', stopOpacity: 1}} /></linearGradient></defs><path fill="url(#grad1)" d="M50,5 C74.85,5 95,25.15 95,50 C95,74.85 74.85,95 50,95 C25.15,95 5,74.85 5,50 C5,25.15 25.15,5 50,5 Z M50,15 C69.33,15 85,30.67 85,50 C85,69.33 69.33,85 50,85 C30.67,85 15,69.33 15,50 C15,30.67 30.67,15 50,15 Z" /><path fill="url(#grad1)" d="M72.5,35 L62.5,35 L62.5,45 L72.5,45 Z M72.5,55 L62.5,55 L62.5,65 L72.5,65 Z M42.5,27.5 L52.5,27.5 L52.5,72.5 L42.5,72.5 Z M27.5,42.5 L37.5,42.5 L37.5,57.5 L27.5,57.5 Z" /></svg>,
    'Grok': <svg viewBox="0 0 24 24"><path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-2-9h4v2h-4v-2zm-3-4l3 3h-3V7zm6 0v3h3l-3-3zM7 15l3-3v3H7zm10 0h-3v-3l3 3z" /></svg>,
    'Make.com': <svg viewBox="0 0 200 200"><circle cx="100" cy="100" r="80" fill="#6C36FF" /><circle cx="65" cy="80" r="18" fill="white" /><circle cx="135" cy="80" r="18" fill="white" /><path d="M 65 110 A 40 40 0 0 0 135 110" stroke="white" strokeWidth="12" fill="none" /></svg>,
    'Claude': <svg viewBox="0 0 100 100"><path d="M50 10 C 20 10, 20 60, 50 60 C 80 60, 80 10, 50 10" fill="#D97757" /><path d="M30 70 C 40 90, 60 90, 70 70" fill="none" stroke="#D97757" strokeWidth="8" strokeLinecap="round" /></svg>,
    'n8n': <svg viewBox="0 0 24 24"><path fill="#0044FF" d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M8,11L11,14V8H13V16L16,13V16L12,20L8,16V11Z" /></svg>,
    'Replit': <svg viewBox="0 0 24 24"><path fill="#FF7F19" d="M14 6L13.12 3.28C13.03 3.12 12.87 3 12.71 3H8.29C8.13 3 7.97 3.12 7.88 3.28L7 6H14M16 6H5L3 12L5 18H16L18 12L16 6M13 13V15H8V13H13M14.5 9.5A.5.5 0 0 1 15 10A.5.5 0 0 1 14.5 10.5A.5.5 0 0 1 14 10A.5.5 0 0 1 14.5 9.5M17.29 3H19.71C19.87 3 20.03 3.12 20.12 3.28L21 6H18L17.29 3Z" /></svg>,
    'Cursor': <svg viewBox="0 0 24 24"><path fill="black" d="M10,21V19H6.41L10.91,14.5L9.5,13.09L5,17.59V14H3V21H10M14.5,9.5L13.09,10.91L17.59,15.41V19H19V13H14V14.59L14.5,9.5Z" /></svg>,
    'Lovable': <svg viewBox="0 0 100 100"><path fill="#FFC0CB" d="M50 90 C 20 90, 10 60, 10 40 C 10 20, 30 10, 50 10 C 70 10, 90 20, 90 40 C 90 60, 80 90, 50 90 Z" /><path fill="black" d="M35 40 Q 50 30, 65 40" stroke="black" strokeWidth="4" /><circle cx="35" cy="55" r="5" fill="black" /><circle cx="65" cy="55" r="5" fill="black" /></svg>,
    'Bolt.new': <svg viewBox="0 0 24 24"><path fill="#00A3FF" d="M11 15H6L13 1V9H18L11 23V15Z" /></svg>,
    'ElevenLabs': <svg viewBox="0 0 24 24"><path fill="black" d="M11 4H13V16L11 14V4M9 7H7V13H9V7M5 10H3V16H5V10M15 7H17V13H15V7M19 10H21V16H19V10Z" /></svg>,
    'Krea.ai': <svg viewBox="0 0 100 100"><path fill="black" d="M20 20 L 80 20 L 80 80 L 20 80 Z" /><path fill="white" d="M30 40 L 50 30 L 70 40 L 70 60 L 50 70 L 30 60 Z" /><path fill="black" d="M40 50 L 60 50" stroke="black" strokeWidth="5" /></svg>,
    'Suno.com': <svg viewBox="0 0 100 100"><circle cx="50" cy="50" r="40" fill="#FF69B4" /><path d="M30,60 a1,1 0 0,0 40,0" fill="white" /><circle cx="35" cy="40" r="6" fill="white" /><circle cx="65" cy="40" r="6" fill="white" /></svg>,
}

type LogoDisplayProps = {
    name: string;
    className?: string;
}

export function LogoDisplay({ name, className }: LogoDisplayProps) {
    const logo = LOGO_MAP[name];

    if (!logo) {
        // Fallback for tools without a specific logo
        return (
            <div className={cn("flex items-center justify-center bg-muted rounded-lg", className)}>
                <span className="text-lg font-bold text-muted-foreground">{name.charAt(0)}</span>
            </div>
        )
    }

    return (
        <div className={cn("rounded-lg overflow-hidden p-2 flex items-center justify-center bg-[#74AA9C]", className)}>
            {logo}
        </div>
    );
}
